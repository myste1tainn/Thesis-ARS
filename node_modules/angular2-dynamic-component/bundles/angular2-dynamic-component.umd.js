(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@angular/core'), require('@angular/http'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['@angular/core', '@angular/http', '@angular/common'], factory) :
	(global.angular2 = global.angular2 || {}, global.angular2.dynamic = global.angular2.dynamic || {}, global.angular2.dynamic.component = factory(global.ng.core,global.ng.http,global.ng.common));
}(this, (function (require$$0,http,common) { 'use strict';

require$$0 = 'default' in require$$0 ? require$$0['default'] : require$$0;
http = 'default' in http ? http['default'] : http;
common = 'default' in common ? common['default'] : common;

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};



function unwrapExports (x) {
	return x && x.__esModule ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var MetadataFactory = createCommonjsModule(function (module, exports) {
"use strict";
exports.PROP_METADATA = 'propMetadata';
exports.ANNOTATIONS_METADATA = 'annotations';
function PropertyAnnotationFactory(annotationMetadata) {
    var Decorator = function (config) {
        return function (target, propertyKey) {
            var meta = Reflect.getOwnMetadata(exports.PROP_METADATA, target.constructor) || {};
            meta[propertyKey] = meta[propertyKey] || [];
            meta[propertyKey].push(Reflect.construct(annotationMetadata, [config]));
            Reflect.defineMetadata(exports.PROP_METADATA, meta, target.constructor);
        };
    };
    var Annotation = Decorator;
    Annotation.annotationMetadata = annotationMetadata;
    return Annotation;
}
exports.PropertyAnnotationFactory = PropertyAnnotationFactory;
});

var Utils$1 = (function () {
    function Utils() {
    }
    Utils.isPresent = function (obj) {
        return obj !== undefined && obj !== null;
    };
    Utils.isUndefined = function (obj) {
        return obj === undefined;
    };
    Utils.isString = function (obj) {
        return typeof obj === 'string';
    };
    Utils.isFunction = function (obj) {
        return typeof obj === 'function';
    };
    Utils.isArray = function (obj) {
        return Array.isArray(obj);
    };
    return Utils;
}());
var Utils_2$1 = Utils$1;

var Utils_1$3 = {
	Utils: Utils_2$1
};

var MetadataFactory$2 = createCommonjsModule(function (module, exports) {
"use strict";
exports.PROP_METADATA = 'propMetadata';
exports.ANNOTATIONS_METADATA = 'annotations';
function PropertyAnnotationFactory(annotationMetadata) {
    var Decorator = function (config) {
        return function (target, propertyKey) {
            var meta = Reflect.getOwnMetadata(exports.PROP_METADATA, target.constructor) || {};
            meta[propertyKey] = meta[propertyKey] || [];
            meta[propertyKey].push(Reflect.construct(annotationMetadata, [config]));
            Reflect.defineMetadata(exports.PROP_METADATA, meta, target.constructor);
        };
    };
    var Annotation = Decorator;
    Annotation.annotationMetadata = annotationMetadata;
    return Annotation;
}
exports.PropertyAnnotationFactory = PropertyAnnotationFactory;
});

var Utils_1 = Utils_1$3;

var Utils_1$5 = Utils_1$3;
var MetadataFactory_1$4 = MetadataFactory$2;
var MetadataHelper$2 = (function () {
    function MetadataHelper() {
    }
    MetadataHelper.findAnnotationsMetaData = function (target, annotation) {
        return MetadataHelper.findMetadata(target, annotation, MetadataFactory_1$4.ANNOTATIONS_METADATA);
    };
    MetadataHelper.findPropertyMetadata = function (target, annotation) {
        return MetadataHelper.findMetadata(target, annotation, MetadataFactory_1$4.PROP_METADATA);
    };
    MetadataHelper.findMetadata = function (target, annotation, metadataName) {
        var annotationsSearch = target.constructor === Function;
        var metadataDefinition = Reflect.getMetadata(metadataName, annotationsSearch ? target : target.constructor);
        if (annotationsSearch) {
            return (metadataDefinition || []);
        }
        else {
            var annotationMetadataInstance_1;
            var annotationMetadataHolder_1 = {};
            if (Utils_1$5.Utils.isPresent(metadataDefinition)) {
                Reflect.ownKeys(metadataDefinition).forEach(function (propertyKey) {
                    var predicate = function (annotationInstance) {
                        var annotationMetadata = annotation.annotationMetadata;
                        return annotationInstance instanceof annotation // Angular2 annotations support
                            || (Utils_1$5.Utils.isPresent(annotationMetadata) && annotationInstance instanceof annotationMetadata);
                    };
                    if (annotationMetadataInstance_1 = metadataDefinition[propertyKey].find(predicate)) {
                        Reflect.set(annotationMetadataHolder_1, propertyKey, annotationMetadataInstance_1);
                    }
                });
            }
            return annotationMetadataHolder_1;
        }
    };
    return MetadataHelper;
}());
var MetadataHelper_2$1 = MetadataHelper$2;

var MetadataHelper_1$3 = {
	MetadataHelper: MetadataHelper_2$1
};

var MetadataHelper_1$5 = MetadataHelper_1$3;
var MetadataHelper$3 = MetadataHelper_1$5.MetadataHelper;
var MetadataFactory_1$5 = MetadataFactory$2;
var PropertyAnnotationFactory$1 = MetadataFactory_1$5.PropertyAnnotationFactory;

var index$4 = {
	MetadataHelper: MetadataHelper$3,
	PropertyAnnotationFactory: PropertyAnnotationFactory$1
};

var Utils_1$6 = createCommonjsModule(function (module, exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require$$0;
var index_1 = index$4;
var uniqueId = 0;
var Utils = (function () {
    function Utils() {
    }
    Utils.nextId = function () {
        return uniqueId++;
    };
    Utils.buildByNextId = function (value) {
        return value.replace('{id}', String(this.nextId()));
    };
    Utils.isPresent = function (obj) {
        return obj !== undefined && obj !== null;
    };
    Utils.isUndefined = function (obj) {
        return obj === undefined;
    };
    Utils.isString = function (obj) {
        return typeof obj === 'string';
    };
    Utils.isFunction = function (obj) {
        return typeof obj === 'function';
    };
    Utils.isArray = function (obj) {
        return Array.isArray(obj);
    };
    Utils.findComponentDecoratorByComponentType = function (componentType) {
        if (Utils.isPresent(componentType)) {
            var annotationsArray = index_1.MetadataHelper.findAnnotationsMetaData(componentType, core_1.Component);
            if (annotationsArray.length) {
                return annotationsArray[0];
            }
        }
        return null;
    };
    Utils.isSelectorOfComponentTypeEqual = function (selector, componentType) {
        var componentDecorator = Utils.findComponentDecoratorByComponentType(componentType);
        var currentSelector = null;
        return this.isPresent(componentDecorator)
            && this.isPresent(currentSelector = this.extractSelector(componentDecorator))
            && selector === currentSelector;
    };
    Utils.extractSelector = function (object) {
        return Reflect.get(object, 'selector');
    };
    Utils.getParamTypes = function (object) {
        return Reflect.getMetadata("design:paramtypes", object);
    };
    Utils.isSelectorPresent = function (object) {
        return Utils.isPresent(this.extractSelector(object));
    };
    /**
     * Calculate a 32 bit FNV-1a hash
     * Found here: https://gist.github.com/vaiorabbit/5657561
     * Ref.: http://isthe.com/chongo/tech/comp/fnv/
     *
     * @param {string} str the input value
     * @param {boolean} [asString=false] set to true to return the hash value as
     *     8-digit hex string instead of an integer
     * @param {number} [seed] optionally pass the hash of the previous chunk
     * @returns {string|number}
     */
    Utils.hashFnv32a = function (str, asString, seed) {
        /*jshint bitwise:false */
        var i, l, hval = (seed === undefined) ? 0x811c9dc5 : seed;
        for (i = 0, l = str.length; i < l; i++) {
            hval ^= str.charCodeAt(i);
            hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);
        }
        if (asString) {
            // Convert to 8 digit hex string
            return ("0000000" + (hval >>> 0).toString(16)).substr(-8);
        }
        return hval >>> 0;
    };
    return Utils;
}());
exports.Utils = Utils;
});

var DynamicBase_1 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require$$0;
var common_1 = common;
var index_1 = index$4;
var Utils_1 = Utils_1$6;
exports.DYNAMIC_TYPES = {
    DynamicExtraModules: 'DynamicExtraModules' // AoT workaround Symbol(..)
};
var HASH_FIELD = '__hashValue';
var DynamicBase = (function () {
    function DynamicBase(dynamicExtraModules, viewContainer, compiler, http$$1, dynamicCache, dynamicSelector) {
        this.dynamicExtraModules = dynamicExtraModules;
        this.viewContainer = viewContainer;
        this.compiler = compiler;
        this.http = http$$1;
        this.dynamicCache = dynamicCache;
        this.dynamicComponentReady = new core_1.EventEmitter(false);
        this.dynamicComponentBeforeReady = new core_1.EventEmitter(false);
        this.dynamicSelector = Utils_1.Utils.buildByNextId(dynamicSelector);
        this.injector = core_1.ReflectiveInjector.fromResolvedProviders([], this.viewContainer.parentInjector);
    }
    /**
     * @override
     */
    DynamicBase.prototype.ngOnChanges = function (changes) {
        var _this = this;
        this.ngOnDestroy();
        this.dynamicComponentBeforeReady.emit(null);
        // TODO investigate memory leak in the specific case
        this.buildModule().then(function (module) {
            var compiledModule;
            var currentModuleHash = Reflect.get(module, HASH_FIELD);
            if (Utils_1.Utils.isPresent(currentModuleHash)) {
                compiledModule = _this.dynamicCache.get(currentModuleHash);
                if (!Utils_1.Utils.isPresent(compiledModule)) {
                    _this.dynamicCache.set(currentModuleHash, compiledModule = _this.compiler.compileModuleAndAllComponentsAsync(module));
                }
            }
            else {
                compiledModule = _this.compiler.compileModuleAndAllComponentsAsync(module);
            }
            compiledModule
                .then(function (moduleWithComponentFactories) {
                _this.moduleInstance = moduleWithComponentFactories.ngModuleFactory.create(_this.injector);
                var factory = moduleWithComponentFactories.componentFactories.find(function (componentFactory) {
                    return Utils_1.Utils.isSelectorOfComponentTypeEqual(componentFactory.selector, _this.componentType)
                        || componentFactory.selector === _this.dynamicSelector
                        || (Utils_1.Utils.isPresent(componentFactory.componentType) && Utils_1.Utils.isPresent(_this.componentTemplate)
                            && Reflect.get(componentFactory.componentType, HASH_FIELD) === Utils_1.Utils.hashFnv32a(_this.componentTemplate, true));
                });
                var componentInstance = _this.componentInstance = factory.create(_this.injector, null, null, _this.moduleInstance);
                _this.viewContainer.insert(componentInstance.hostView, 0);
                _this.applyPropertiesToDynamicComponent(_this.componentInstance.instance);
                _this.dynamicComponentReady.emit(_this.componentInstance.instance);
            });
        });
    };
    /**
     * @override
     */
    DynamicBase.prototype.ngOnDestroy = function () {
        if (Utils_1.Utils.isPresent(this.moduleInstance)) {
            this.moduleInstance.destroy();
            this.moduleInstance = null;
        }
        if (Utils_1.Utils.isPresent(this.componentInstance)) {
            this.componentInstance.destroy();
            this.componentInstance = null;
        }
        if (Utils_1.Utils.isPresent(this.cachedDynamicModule)) {
            this.compiler.clearCacheFor(this.cachedDynamicModule);
            this.cachedDynamicModule = null;
        }
        if (Utils_1.Utils.isPresent(this.cachedDynamicComponent)) {
            this.compiler.clearCacheFor(this.cachedDynamicComponent);
            this.cachedDynamicComponent = null;
        }
    };
    /**
     * Build module wrapper for dynamic component asynchronously
     *
     * @returns {Promise<AnyT>}
     */
    DynamicBase.prototype.buildModule = function () {
        var _this = this;
        return new Promise(function (resolve) {
            if (Utils_1.Utils.isPresent(_this.componentTemplate)) {
                resolve(_this.makeComponentModule({ template: _this.componentTemplate }));
            }
            else if (Utils_1.Utils.isPresent(_this.componentTemplatePath)) {
                resolve(_this.makeComponentModule({ templatePath: _this.componentTemplatePath }));
            }
            else if (Utils_1.Utils.isPresent(_this.componentTemplateUrl)) {
                _this.loadRemoteTemplate(_this.componentTemplateUrl, resolve);
            }
            else {
                resolve(_this.makeComponentModule());
            }
        });
    };
    DynamicBase.prototype.loadRemoteTemplate = function (url, resolve) {
        var _this = this;
        var requestArgs = { withCredentials: true };
        if (Utils_1.Utils.isPresent(this.componentRemoteTemplateFactory)) {
            requestArgs = this.componentRemoteTemplateFactory.buildRequestOptions();
        }
        this.http.get(url, requestArgs)
            .subscribe(function (response) {
            // TODO Inject response statuses
            if ([301, 302, 307, 308].indexOf(response.status) > -1) {
                var chainedUrl = response.headers.get('Location');
                // TODO Inject logger
                console.debug('[$DynamicBase][loadRemoteTemplate] The URL into the chain is:', chainedUrl);
                if (Utils_1.Utils.isPresent(chainedUrl)) {
                    _this.loadRemoteTemplate(chainedUrl, resolve);
                }
                else {
                    console.warn('[$DynamicBase][loadRemoteTemplate] The URL into the chain is empty. The process of redirect has stopped.');
                }
            }
            else {
                var loadedTemplate = Utils_1.Utils.isPresent(_this.componentRemoteTemplateFactory)
                    ? _this.componentRemoteTemplateFactory.parseResponse(response)
                    : response.text();
                resolve(_this.makeComponentModule({ template: loadedTemplate }));
            }
        }, function (response) {
            console.warn('[$DynamicBase][loadRemoteTemplate] Error response:', response);
            var template = _this.componentDefaultTemplate || '';
            resolve(_this.makeComponentModule({ template: template }));
        });
    };
    DynamicBase.prototype.makeComponentModule = function (dynamicConfig) {
        var dynamicComponentType = this.cachedDynamicComponent
            = this.makeComponent(dynamicConfig);
        var componentModules = this.dynamicExtraModules.concat(this.componentModules || []);
        var dynamicComponentModule = (function () {
            function dynamicComponentModule() {
            }
            return dynamicComponentModule;
        }());
        dynamicComponentModule.decorators = [
            { type: core_1.NgModule, args: [{
                        declarations: [dynamicComponentType],
                        imports: [common_1.CommonModule].concat(componentModules)
                    },] },
        ];
        /** @nocollapse */
        dynamicComponentModule.ctorParameters = function () { return []; };
        var dynamicComponentTypeHash = Reflect.get(dynamicComponentType, HASH_FIELD);
        if (Utils_1.Utils.isPresent(dynamicComponentTypeHash)) {
            Reflect.set(dynamicComponentModule, HASH_FIELD, dynamicComponentTypeHash);
        }
        return this.cachedDynamicModule = dynamicComponentModule;
    };
    /**
     * Build dynamic component class
     *
     * @param componentConfig
     * @returns {Type<IDynamicComponent>}
     */
    DynamicBase.prototype.makeComponent = function (componentConfig) {
        var internalInjector = this.injector;
        var componentDecorator = Utils_1.Utils.findComponentDecoratorByComponentType(this.componentType);
        var componentTypeParameters = Utils_1.Utils.isPresent(this.componentType)
            ? (Utils_1.Utils.getParamTypes(this.componentType) || [])
            : [];
        var componentMetadata;
        if (Utils_1.Utils.isPresent(componentDecorator)) {
            if (!Utils_1.Utils.isSelectorPresent(componentDecorator)) {
                // Setting selector if it is not present in Component metadata
                Reflect.set(componentDecorator, 'selector', this.componentType.name);
            }
        }
        else {
            componentMetadata = {
                selector: this.dynamicSelector,
                styles: this.componentStyles
            };
            if (Utils_1.Utils.isPresent(componentConfig)) {
                if (Utils_1.Utils.isPresent(componentConfig.template)) {
                    componentMetadata.template = componentConfig.template;
                }
                else if (Utils_1.Utils.isPresent(componentConfig.templatePath)) {
                    componentMetadata.templateUrl = componentConfig.templatePath;
                }
            }
        }
        var dynamicClassMetadata = componentDecorator || componentMetadata;
        var componentParentClass = (this.componentType || (function () {
            function class_1() {
            }
            return class_1;
        }()));
        var dynamicComponentClass = (function (_super) {
            __extends(dynamicComponentClass, _super);
            function dynamicComponentClass(elementRef) {
                return _super.apply(this, componentTypeParameters
                    .map(function (service) {
                    return elementRef instanceof service
                        ? elementRef
                        : internalInjector.get(service);
                })
                    .concat([elementRef])) || this;
            }
            return dynamicComponentClass;
        }(componentParentClass));
        dynamicComponentClass.decorators = [
            { type: core_1.Component, args: [dynamicClassMetadata,] },
        ];
        /** @nocollapse */
        dynamicComponentClass.ctorParameters = function () { return [
            { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },
        ]; };
        if (Utils_1.Utils.isPresent(Reflect.get(dynamicClassMetadata, 'template'))) {
            Reflect.set(dynamicComponentClass, HASH_FIELD, Utils_1.Utils.hashFnv32a(Reflect.get(dynamicClassMetadata, 'template'), true));
        }
        return dynamicComponentClass;
    };
    DynamicBase.prototype.applyPropertiesToDynamicComponent = function (instance) {
        var _this = this;
        var metadataHolder = index_1.MetadataHelper.findPropertyMetadata(this, core_1.Input);
        for (var _i = 0, _a = Object.keys(this); _i < _a.length; _i++) {
            var property = _a[_i];
            if (Reflect.has(metadataHolder, property)) {
                if (Reflect.has(instance, property)) {
                    console.warn('[$DynamicBase][applyPropertiesToDynamicComponent] The property', property, 'will be overwritten for the component', instance);
                }
                Reflect.set(instance, property, Reflect.get(this, property));
            }
        }
        if (Utils_1.Utils.isPresent(this.componentContext)) {
            var _loop_1 = function (property) {
                if (Reflect.has(instance, property)) {
                    console.warn('[$DynamicBase][applyPropertiesToDynamicComponent] The property', property, 'will be overwritten for the component', instance);
                }
                var propValue = Reflect.get(this_1.componentContext, property);
                var attributes = {};
                if (!Utils_1.Utils.isFunction(propValue)) {
                    attributes.set = function (v) { return Reflect.set(_this.componentContext, property, v); };
                }
                attributes.get = function () { return Reflect.get(_this.componentContext, property); };
                Reflect.defineProperty(instance, property, attributes);
            };
            var this_1 = this;
            for (var property in this.componentContext) {
                _loop_1(property);
            }
        }
    };
    return DynamicBase;
}());
DynamicBase.propDecorators = {
    'dynamicComponentReady': [{ type: core_1.Output },],
    'dynamicComponentBeforeReady': [{ type: core_1.Output },],
    'componentType': [{ type: core_1.Input },],
    'componentTemplate': [{ type: core_1.Input },],
    'componentStyles': [{ type: core_1.Input },],
    'componentContext': [{ type: core_1.Input },],
    'componentTemplateUrl': [{ type: core_1.Input },],
    'componentTemplatePath': [{ type: core_1.Input },],
    'componentDefaultTemplate': [{ type: core_1.Input },],
    'componentRemoteTemplateFactory': [{ type: core_1.Input },],
    'componentModules': [{ type: core_1.Input },],
};
exports.DynamicBase = DynamicBase;
});

var DynamicCache_1 = createCommonjsModule(function (module, exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require$$0;
var DynamicCache = (function () {
    function DynamicCache(ngZone) {
        var _this = this;
        this.memoryCache = new Map();
        /**
         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.
         */
        ngZone.onUnstable.subscribe(function () { return _this.memoryCache.clear(); });
        /**
         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which
         * implies we are about to relinquish VM turn.
         * This event gets called just once.
         */
        ngZone.onStable.subscribe(function () { return _this.memoryCache.clear(); });
    }
    DynamicCache.prototype.set = function (key, value) {
        this.memoryCache.set(key, value);
    };
    DynamicCache.prototype.get = function (key) {
        return this.memoryCache.get(key);
    };
    return DynamicCache;
}());
DynamicCache.decorators = [
    { type: core_1.Injectable },
];
/** @nocollapse */
DynamicCache.ctorParameters = function () { return [
    { type: core_1.NgZone, decorators: [{ type: core_1.Inject, args: [core_1.NgZone,] },] },
]; };
exports.DynamicCache = DynamicCache;
});

var DynamicComponent_1 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require$$0;
var http_1 = http;
var DynamicBase_1$$1 = DynamicBase_1;
var DynamicCache_1$$1 = DynamicCache_1;
var DynamicComponentMetadata = (function () {
    function DynamicComponentMetadata(selector, template) {
        if (selector === void 0) { selector = 'DynamicComponent'; }
        if (template === void 0) { template = ''; }
        this.selector = selector;
        this.template = template;
    }
    return DynamicComponentMetadata;
}());
exports.DynamicComponentMetadata = DynamicComponentMetadata;
var DynamicComponent = (function (_super) {
    __extends(DynamicComponent, _super);
    function DynamicComponent(dynamicExtraModules, viewContainer, compiler, http$$1, dynamicCache) {
        return _super.call(this, dynamicExtraModules, viewContainer, compiler, http$$1, dynamicCache, 'DynamicComponent{id}') || this;
    }
    return DynamicComponent;
}(DynamicBase_1$$1.DynamicBase));
DynamicComponent.decorators = [
    { type: core_1.Component, args: [{
                selector: 'DynamicComponent',
                template: ''
            },] },
];
/** @nocollapse */
DynamicComponent.ctorParameters = function () { return [
    { type: Array, decorators: [{ type: core_1.Inject, args: [DynamicBase_1$$1.DYNAMIC_TYPES.DynamicExtraModules,] },] },
    { type: core_1.ViewContainerRef, decorators: [{ type: core_1.Inject, args: [core_1.ViewContainerRef,] },] },
    { type: core_1.Compiler, decorators: [{ type: core_1.Inject, args: [core_1.Compiler,] },] },
    { type: http_1.Http, decorators: [{ type: core_1.Inject, args: [http_1.Http,] },] },
    { type: DynamicCache_1$$1.DynamicCache, decorators: [{ type: core_1.Inject, args: [DynamicCache_1$$1.DynamicCache,] },] },
]; };
DynamicComponent.propDecorators = {
    'dynamicComponentReady': [{ type: core_1.Output },],
    'dynamicComponentBeforeReady': [{ type: core_1.Output },],
    'componentType': [{ type: core_1.Input },],
    'componentTemplate': [{ type: core_1.Input },],
    'componentStyles': [{ type: core_1.Input },],
    'componentContext': [{ type: core_1.Input },],
    'componentTemplateUrl': [{ type: core_1.Input },],
    'componentTemplatePath': [{ type: core_1.Input },],
    'componentDefaultTemplate': [{ type: core_1.Input },],
    'componentRemoteTemplateFactory': [{ type: core_1.Input },],
    'componentModules': [{ type: core_1.Input },],
};
exports.DynamicComponent = DynamicComponent;
});

var DynamicDirective_1 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require$$0;
var http_1 = http;
var DynamicBase_1$$1 = DynamicBase_1;
var DynamicCache_1$$1 = DynamicCache_1;
var DynamicDirective = (function (_super) {
    __extends(DynamicDirective, _super);
    function DynamicDirective(dynamicExtraModules, viewContainer, compiler, http$$1, dynamicCache) {
        return _super.call(this, dynamicExtraModules, viewContainer, compiler, http$$1, dynamicCache, '[dynamic-component-{id}]') || this;
    }
    return DynamicDirective;
}(DynamicBase_1$$1.DynamicBase));
DynamicDirective.decorators = [
    { type: core_1.Directive, args: [{
                selector: '[dynamic-component]'
            },] },
];
/** @nocollapse */
DynamicDirective.ctorParameters = function () { return [
    { type: Array, decorators: [{ type: core_1.Inject, args: [DynamicBase_1$$1.DYNAMIC_TYPES.DynamicExtraModules,] },] },
    { type: core_1.ViewContainerRef, decorators: [{ type: core_1.Inject, args: [core_1.ViewContainerRef,] },] },
    { type: core_1.Compiler, decorators: [{ type: core_1.Inject, args: [core_1.Compiler,] },] },
    { type: http_1.Http, decorators: [{ type: core_1.Inject, args: [http_1.Http,] },] },
    { type: DynamicCache_1$$1.DynamicCache, decorators: [{ type: core_1.Inject, args: [DynamicCache_1$$1.DynamicCache,] },] },
]; };
DynamicDirective.propDecorators = {
    'dynamicComponentReady': [{ type: core_1.Output },],
    'dynamicComponentBeforeReady': [{ type: core_1.Output },],
    'componentType': [{ type: core_1.Input },],
    'componentTemplate': [{ type: core_1.Input },],
    'componentStyles': [{ type: core_1.Input },],
    'componentContext': [{ type: core_1.Input },],
    'componentTemplateUrl': [{ type: core_1.Input },],
    'componentTemplatePath': [{ type: core_1.Input },],
    'componentDefaultTemplate': [{ type: core_1.Input },],
    'componentRemoteTemplateFactory': [{ type: core_1.Input },],
    'componentModules': [{ type: core_1.Input },],
};
exports.DynamicDirective = DynamicDirective;
});

var DynamicComponentModule_1 = createCommonjsModule(function (module, exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require$$0;
var DynamicComponent_1$$1 = DynamicComponent_1;
var DynamicDirective_1$$1 = DynamicDirective_1;
var DynamicBase_1$$1 = DynamicBase_1;
var DynamicCache_1$$1 = DynamicCache_1;
var DynamicComponentModule = (function () {
    function DynamicComponentModule() {
    }
    return DynamicComponentModule;
}());
DynamicComponentModule.decorators = [
    { type: core_1.NgModule, args: [{
                providers: [
                    DynamicCache_1$$1.DynamicCache,
                    { provide: DynamicBase_1$$1.DYNAMIC_TYPES.DynamicExtraModules, useValue: [] }
                ],
                declarations: [
                    DynamicComponent_1$$1.DynamicComponent,
                    DynamicDirective_1$$1.DynamicDirective
                ],
                exports: [
                    DynamicComponent_1$$1.DynamicComponent,
                    DynamicDirective_1$$1.DynamicDirective
                ]
            },] },
];
/** @nocollapse */
DynamicComponentModule.ctorParameters = function () { return []; };
exports.DynamicComponentModule = DynamicComponentModule;
var DynamicComponentModuleFactory = (function () {
    function DynamicComponentModuleFactory() {
    }
    DynamicComponentModuleFactory.buildModule = function (dynamicExtraModules) {
        var DynamicComponentFactoryModule = (function () {
            function DynamicComponentFactoryModule() {
            }
            return DynamicComponentFactoryModule;
        }());
        DynamicComponentFactoryModule.decorators = [
            { type: core_1.NgModule, args: [{
                        providers: [
                            DynamicCache_1$$1.DynamicCache,
                            { provide: DynamicBase_1$$1.DYNAMIC_TYPES.DynamicExtraModules, useValue: dynamicExtraModules }
                        ],
                        declarations: [
                            DynamicComponent_1$$1.DynamicComponent,
                            DynamicDirective_1$$1.DynamicDirective
                        ],
                        exports: [
                            DynamicComponent_1$$1.DynamicComponent,
                            DynamicDirective_1$$1.DynamicDirective
                        ]
                    },] },
        ];
        /** @nocollapse */
        DynamicComponentFactoryModule.ctorParameters = function () { return []; };
        return DynamicComponentFactoryModule;
    };
    return DynamicComponentModuleFactory;
}());
exports.DynamicComponentModuleFactory = DynamicComponentModuleFactory;
});

var index = createCommonjsModule(function (module, exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(DynamicComponent_1);
__export(DynamicDirective_1);
__export(DynamicBase_1);
__export(DynamicComponentModule_1);
__export(DynamicCache_1);
});

var index$1 = unwrapExports(index);

return index$1;

})));
