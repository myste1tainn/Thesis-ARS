import { DecoratorType } from 'ts-metadata-helper/index';
import { DynamicComponentType } from './DynamicBase';
export declare class Utils {
    static nextId(): number;
    static buildByNextId(value: string): string;
    static isPresent(obj: any): boolean;
    static isUndefined(obj: any): boolean;
    static isString(obj: any): boolean;
    static isFunction(obj: any): boolean;
    static isArray(obj: any): boolean;
    static findComponentDecoratorByComponentType(componentType?: DynamicComponentType): DecoratorType;
    static isSelectorOfComponentTypeEqual(selector: string, componentType: DynamicComponentType): boolean;
    static extractSelector(object: DecoratorType): string;
    static getParamTypes(object: any): Array<any>;
    static isSelectorPresent(object: DecoratorType): boolean;
    /**
     * Calculate a 32 bit FNV-1a hash
     * Found here: https://gist.github.com/vaiorabbit/5657561
     * Ref.: http://isthe.com/chongo/tech/comp/fnv/
     *
     * @param {string} str the input value
     * @param {boolean} [asString=false] set to true to return the hash value as
     *     8-digit hex string instead of an integer
     * @param {number} [seed] optionally pass the hash of the previous chunk
     * @returns {string|number}
     */
    static hashFnv32a(str: any, asString?: any, seed?: any): string | number;
}
